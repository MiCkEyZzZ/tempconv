// Пакет tempconv предоставляет типы, константы и функции для работы с преобразованием температур
// между пятью шкалами: Цельсия, Фаренгейта, Кельвина, Ранкина и Реомюра.
//
// Основные типы:
//
// - Celsius    — для представления температуры в градусах Цельсия,
//
// - Fahrenheit — для представления температуры в градусах Фаренгейта,
//
// - Kelvin     — для представления температуры в Кельвинах,
//
// - Rankine    — для представления температуры в Ранкинах,
//
// - Reaumur    — для представления температуры в Реомюрах.
//
// Интерфейс Temperature:
//
// Интерфейс Temperature объединяет основные методы для работы с температурами.
// Он позволяет преобразовывать значения в другие шкалы, получать название шкалы
// и строковое представление температуры. Основные методы интерфейса:
//
// - ToCelsius()    — преобразует температуру в шкалу Цельсия,
//
// - ToFahrenheit() — преобразует температуру в шкалу Фаренгейта,
//
// - ToKelvin()     — преобразует температуру в шкалу Кельвина,
//
// - ToRankine()    — преобразует температуру в шкалу Ранкина,
//
// - ToReaumur()    — преобразует температуру в шкалу Реомюра,
//
// - ScaleName()    — возвращает название шкалы,
//
// - String()       — возвращает строковое представление температуры.
//
// Константы:
//
// Пакет включает ключевые точки температур, такие как:
//
// - absoluteZeroC — абсолютный ноль в градусах Цельсия (-273.15°C),
//
// - absoluteZeroF — абсолютный ноль в градусах Фаренгейта (-459.67°F),
//
// - absoluteZeroK — абсолютный ноль в Кельвинах (0K),
//
// - absoluteZeroR — абсолютный ноль в Ранкинах (0°R),
//
// - absoluteZeroRe — абсолютный ноль в Реомюрах (-218.52°Re).
//
// Функции создания объектов:
//
// Для каждой шкалы предоставлены функции, которые создают объекты температуры и
// проверяют значения на соответствие минимально допустимым (не ниже абсолютного нуля):
//
// - NewCelsius(c float64) (Celsius, error),
//
// - NewFahrenheit(f float64) (Fahrenheit, error),
//
// - NewKelvin(k float64) (Kelvin, error),
//
// - NewRankine(r float64) (Rankine, error),
//
// - NewReaumur(re float64) (Reaumur, error).
//
// Эти функции возвращают ошибку, если указанное значение температуры меньше абсолютного нуля.
//
// Пример использования:
//
//	package main
//
//	import (
//	    "fmt"

//	    "github.com/MiCkEyZzZ/tempconv/tempconv"
//	)
//
//	func main() {
//	    // Создаем значение температуры в градусах Цельсия
//	    tC, err := tempconv.NewCelsius(100)
//	    if err != nil {
//	        fmt.Println("Ошибка:", err)
//	        return
//	    }
//	    // Преобразуем в градусы Фаренгейта
//	    tF := tC.ToFahrenheit()
//	    fmt.Printf("%.2f°C в Фаренгейтах: %.2f°F\n", tC, tF)
//
//	    // Преобразуем в Кельвины
//	    tK := tC.ToKelvin()
//	    fmt.Printf("%.2f°C в Кельвинах: %.2fK\n", tC, tK)
//
//	    // Используем интерфейс Temperature для универсального доступа
//	    var temp tempconv.Temperature = tC
//	    fmt.Printf("Температура в Ранкинах: %.2f°R\n", temp.ToRankine())
//	}
//
// Преимущества пакета:
//
// Пакет tempconv подходит для научных расчетов, учебных задач, метеорологических приложений,
// а также везде, где требуется надежное и точное преобразование температур между различными шкалами.
package tempconv
